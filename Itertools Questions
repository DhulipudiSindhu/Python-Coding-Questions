1.
You are given a string S. Suppose a character 'c' occurs consecutively X times in the string S. Replace these consecutive occurrences of the Character 'c'  with (X,'c') in the string S.

Input:
1222311

Output:
(1, 1) (3, 2) (1, 3) (2, 1) 

Code:

from itertools import groupby
print(*[(len(list(c)), int(k)) for k, c in groupby(input())],end=' ')

  			or							
S = input()

c = 1

for i in range(len(S)-1):
    if S[i] == S[i+1]:
        c = c + 1
    else:
        print('({}, {})'.format(c,S[i]),end=' ')
        c = 1
print('({}, {})'.format(c,s[len(S)-1]),end=' ')


2.
Write a program to compress the word by replacing  repeating characters by adding number of times it's repeated just before the character
example of compress a string:
	ex:  door - d2or
example of uncompress a string:
	ex: d2or - door

Input:
3
speed
elephant
jo2ly

Output:
sp2ed
elephant
jolly



from itertools import groupby
def passing_word(word):
    a =[];b = []
    for k,v in (groupby(word)):
        a.append(k)
        b.append(list(v))
    for i in range(len(a)):
        c = b[i].count(a[i])
        if 1<c:
            print(str(c)+a[i],end="")
        else:
           print(a[i],end="") 
    print()
    
n = int(input())
for i in range(n):
    x = input();s=0
   # print(x)
    if x.isalpha():
        passing_word(x)
    else:
        for j in range(len(x)):
            if x[j].isdigit():
                s = s*10+int(x[j])
            elif s!=0: 
                for k in range(s):
                    print(x[j],end="")
                    s=0
            else:
                print(x[j],end="")
        print()
